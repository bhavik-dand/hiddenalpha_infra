services:
  backend:
    image: bhand247/backend:latest
    container_name: backend
    ports:
      - "8080:8080" # Host:Container
    env_file:
      - ./backend.env
    volumes:
      - ./backend.env:/app/.env # Optional: Mount .env file if your app reads from the filesystem
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3
  frontend:
    image: bhand247/frontend:latest
    container_name: frontend
    ports:
      - "3000:3000" # Host:Container
    env_file:
      - ./frontend.env
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1.5G
  jarvis:
    image: bhand247/jarvis:latest
    container_name: jarvis
    ports:
      - "8000:8000"
    env_file:
      - ./jarvis.env
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '5.4'
          memory: 5.4G
        
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M
networks:
  app-network:
    driver: bridge
